Using selenium we need to work on web page elements.


Steps:
------------
1.get the web element object for the page element using driver


How to get web element objects:
-----------------------------------------
depends on the html code of the page element.


In Selenium locating the web element we have following Options:
------------------------------------------------------------------
- is used to identify every webelement on the web page.
- for every element on html we need to create the web element object


1.By Id
2.By name
3.By Tag name
4.By Link Text
6.By partial Text
5.By xpath
6.By css
7.By class name



 By Name:
------------------------------------
<html>
 <body>
  <form id="loginForm">
   <input name="username" type="text" />
   <input name="password" type="password" />
   <input name="age" type="text" />
  </form>
 </body>
<html>


WebElement unObj = driver.findElement(By.name("username"));
WebElement pwdObj = driver.findElement(By.name("password"));
WebElement ageObj = driver.findElement(By.name("age"));
	

 By ID:
------------------------------------
<html>
 <body>
  <form id="loginForm">
   <input id="username" type="text" />
   <input id="password" type="password" />
   <input id="age" type="text" />
  </form>
 </body>
<html>


WebElement unObj = driver.findElement(By.id("username"));
WebElement pwdObj = driver.findElement(By.id("password"));
WebElement ageObj = driver.findElement(By.id("age"));


Get multiple elements
------------------------------------
<html>
 <body>
  <form id="loginForm">
   <input name="username" type="text" />
   <input name="username" type="username" />
   <input name="continue" type="submit" value="Login" />
  </form>
 </body>
<html>


WebElement unObjs = driver.findElements(By.name("username")); # list of web element object


By Tag Name:
-------------------------
<html>
 <body>
  <h1>Welcome</h1>
  <p>Site content goes here.</p>
</body>
<html>


WebElement h1Obj  = driver.findElements(By.tagName("h1"));


By Link text/partial link text:
---------------------------------------------------------
<a href="https://www.gmail.com">Open Gmail</a>
<a href="https://www.google.com">Open google</a>

		
WebElement obj1  = driver.findElements(By.linkText("Open Gmail""));
WebElement obj2  = driver.findElements(By.linkText("Open google"));

WebElement obj4  = driver.findElements(By.partialLinkText("Gmail"));
WebElement h1Obj  = driver.findElements(By.partialLinkText("google"));


By Class name:
---------------------------------------------------------
<html>
 <body>
  <p class="content">Site content goes here.</p>
</body>
<html>

WebElement h1Obj  = driver.findElements(By.className("content"));



which method to use for getting the single web element?
findElement() 
– finds a single web element and returns as a WebElement object.
- Find Element command throws NoSuchElementException if it does not find the element matching the criteria.
- Find Element command returns the web element that matches the first most element within the web page



which method to use for getting the multiple web element?
findElements() 
– returns a list of WebElement objects matching the locator criteria.
- Find Elements command returns a list of web elements that match the criteria.
- Find Elements command returns an empty list if there are no elements matching the criteria



Text BOX:
------------------------------------------------------------------------------
ex:
  <input type="text" id="myname" name="uName" />
  
  
1.How to get the web element for the text field using name?
  <input type="text" id="myname" name="uName" />
   WebElement item = driver.findElement(By.name("uName"));  
 
 2.How to get the web element for the text field using id?
  <input type="text" id="myname" name="uName" />
   WebElement item = driver.findElement(By.id("myname"));  
   
   
   3.How to check if the  web element is displayed?
 	use "item.isDisplayed()"  
	   -returns true if element is displayed
	   -returns false if element is not displayed
	   
  4.How to check if the  web element is enabled?
   use "item.isEnabled()"
	   -returns true if element is Enabled
	   -returns false if element is not Enabled
 
	Input Box/password/text area:	
	sendKeys()	used to enter values onto text boxes
	clear()	used to clear text boxes of its current value

  5.How to enter the text to the text-field/password/text area/popup?
     use item.sendKeys("kumar");
	   
  6.How to clear the text for the  text-field/password/text area/popup?
    use item.clear();
  
  7.How to check if the web element is text box?  
    <input type="text" id="myname" name="uName" size="30"/>
     WebElement item = driver.findElement(By.id("myname"));  
   
   call  
   item.getAttribute("type") method
   here input = tag
   type, id , name , size are attributes
   

   ex:
 	  String type = item.getAttribute("type") ;
 	  String size = item.getAttribute("size") ;
 
  
  8.How to check if the web element is password?  
    <input type="password" id="myname" name="uName" />
    	String type = item.getAttribute("type") ;
 		// type should be "password"
  
  9.How to check if the web element is hidden?  
     <input type="hidden" id="myname" name="uName" />
        String type = item.getAttribute("type") ;
 		// type should be "hidden"
  
  10.How to check if the web element is radio?
   <input type="radio" id="myname" name="uName" />
        String type = item.getAttribute("type") ;
 		// type should be "radio"
   
  11.How to check if the web element is checkbox?
    <input type="checkbox" id="myname" name="uName" />
  		 String type = item.getAttribute("type") ;
 		// type should be "checkbox"
    
 
 
 12. 
 <input type="text" name="uName1" readonly="readonly" value="kumar" class="text-class" id="uNameID">
 
 How to get all the attributes of the web element?
 WebElement element = driver.findElement(By.name("uName1"));
  
   System.out.println(element.getAttribute("type")); // text
   System.out.println(element.getAttribute("name"));  //uName1
   System.out.println(element.getAttribute("readonly")); //true
   System.out.println(element.getAttribute("value"));  //kumar
   System.out.println(element.getAttribute("class"));   //text-class
   System.out.println(element.getAttribute("id")); //uNameID
  
    
  /**
       How to check if the webelement is selected or not?
       solution)
       item.isSeleected() --> returns true/false
       applicable : radio , checkbox , dropdown  
   */

Links:
click()	used to click on the link and wait for page load to complete before proceeding to the next command.



Submit Button:
submit()	 use the submit() method on any element within the form


Check Box, Radio Button:
click()	used to toggle the element on/off

  
 Actions: 
 --------
 -mouse operations
- keyboard opeartions

 -Action Class in Selenium is a built-in feature provided by the selenium for
 handling keyboard and mouse events.
 - It includes various operations 
 such as multiple events clicking by control key, drag and drop events
 
 
 ex:
 ->KeyPress,key up, key down, enter, tab, pageup, page down and context menu interactions.
-> hover over and drag and drop.
->double click , right click'
  
  
 KEY:
-------------
sendKeys(keysToSend): Sends a series of keystrokes onto the element.
keyDown(theKey): Sends a key press without release it.
keyUp(theKey): Performs a key release.



Mouse:
-------------- 
click(): Clicks on the element.
doubleClick (): Double clicks on the element.
contextClick() : Performs a context-click (right-click) on the element.
clickAndHold(): Clicks at the present mouse location without releasing.  
moveToElement(toElement):  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
    
   
      
  
  
  
  
  
  